name: Build And Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  
jobs:
  linux-desktop:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        compiler: [g++-11, clang++-12]

    steps:
    - uses: actions/checkout@v3
    - name: Install Packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y gcc-multilib python3 curl zip unzip
        sudo apt-get install -y mesa-common-dev libglu1-mesa-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libgl1-mesa-dev
          
    - name: Cache External
      uses: actions/cache@v3
      with:
        path: |
          ${{github.workspace}}/fastfall/external/*/
          ${{github.workspace}}/fastfall/test/google_test/
        key: 1
        
    - name: Cache Build
      uses: actions/cache@v3
      with:
        path: |
          ${{github.workspace}}/build-${{matrix.compiler}}-${{env.BUILD_TYPE}}/
        key: build-${{matrix.compiler}}-${{env.BUILD_TYPE}}
        
    - name: Configure CMake ${{ matrix.compiler }}
      run: cmake -B ${{github.workspace}}/build-${{matrix.compiler}}-${{env.BUILD_TYPE}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}

    - name: Build
      run: cmake --build build-${{matrix.compiler}}-${{env.BUILD_TYPE}} --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build-${{matrix.compiler}}-${{env.BUILD_TYPE}}
      run: ctest -C ${{env.BUILD_TYPE}} --output-junit test_results.xml
      
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results (Linux ${{ matrix.compiler }})
        path: build-${{matrix.compiler}}-${{env.BUILD_TYPE}}/test_results.xml
        
    - name: Create Release
      uses: ncipollo/release-action@v1.10.0
      with:
        name: fastfall_SDL
        artifacts: "${{github.workspace}}/build-${{matrix.compiler}}-${{env.BUILD_TYPE}}/test_project_*.zip"
        allowUpdates: true
        tag: release
        
  windows-desktop:
    runs-on: windows-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
    steps:          
    - name: Cache External
      uses: actions/cache@v3
      with:
        path: |
          ${{github.workspace}}/fastfall/external/*/
          ${{github.workspace}}/fastfall/test/google_test/
        key: 1
        
    - name: Cache Build
      uses: actions/cache@v3
      with:
        path: |
          ${{github.workspace}}/build-windows-${{env.BUILD_TYPE}}/
        key: build-windows-${{env.BUILD_TYPE}}
        
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build-windows-${{env.BUILD_TYPE}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build build-windows-${{env.BUILD_TYPE}} --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build-windows-${{env.BUILD_TYPE}}
      run: ctest -C ${{env.BUILD_TYPE}} --output-junit test_results.xml
      
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results (Windows)
        path: build-windows-${{env.BUILD_TYPE}}/test_results.xml
        
    - name: Create Release
      uses: ncipollo/release-action@v1.10.0
      with:
        name: fastfall_SDL
        artifacts: "${{github.workspace}}/build-windows-${{env.BUILD_TYPE}}/test_project_*.zip"
        allowUpdates: true
        tag: release
