include "math.fbs";

namespace flat.resources;

// LEVEL ASSET

table PropertyF {
	name:string;
	value:string;
}

table ObjectF {
	id:uint;
	name:string (required);
	type_hash:ulong;
	pos:math.Vec2Fi (required);
	width:uint;
	height:uint;
	properties:[PropertyF];
	points:[math.Vec2Fi];
}

table ObjectLayerF {
	objects:[ObjectF];
}

table TileLayerF {
	layer_id:uint = 0;

	has_parallax:bool = false;
	has_scroll:bool = false;
	has_collision:bool = false;

	collision_border:uint = 0;
	parallax_size:math.Vec2Fu;
	scroll_rate:math.Vec2Ff;
	
	tile_size:math.Vec2Fu;
	has_tile:[bool];
	pos:[math.Vec2Fu];
	tex_pos:[math.Vec2Fu];
	tileset_ndx:[uint8];

	tilesets:[string];
}

union AnyLayerF {
	TileLayerF,
	ObjectLayerF
}

table LevelLayerF {
	id:uint;
	layer:AnyLayerF;
	properties:[PropertyF];
}

table LevelTilesetDepF {
	gid:uint;
	tileset_name:string;
}

table LevelAssetF {
	name:string (required);
	bg_color:uint;
	lvl_size:math.Vec2Fu (required);
	layers:[LevelLayerF];
	tileset_deps:[LevelTilesetDepF];
	borders:uint;
}

// TILESET ASSET

struct TileShapeF {
	type:uint;
	shape_touches:uint;
	hflip:bool;
	vflip:bool;
}

struct TileF {
	pos:ubyte;
	shape:TileShapeF;
	facing:math.CardinalF;
	next_offset:ubyte;
	next_tileset_ndx:int;
}

struct TileDataF {
	tile:TileF;
	has_prop_bits:ubyte = 0;
	logic_ndx:uint;
	logic_arg_ndx:uint;
	material_ndx:uint;
}

table TilesetLogicF {
	logic:string (required);
	logic_arg:[string];
}

table TilesetAssetF {
	name:string (required);
	tile_size:math.Vec2Fu (required);
	tile_data:[TileDataF];
	tilesets:[string];
	materials:[string];
	logics:[TilesetLogicF];
	image:[byte] (required);
}

// SPRITE ASSET

table AnimationAssetF {
	//spr_name:string (required);
	name:string (required);
	area:math.RectFi (required);
	origin:math.Vec2Fi (required);
	framerate_ms:[uint] (required);
	loop:uint = 0;

	has_chain:bool = false;
	chain_spr_name:string;
	chain_anim_name:string;
	chain_frame:uint;
}

table SpriteAssetF {
	name:string (required);
	animations:[AnimationAssetF];
	image:[byte] (required);
}

// ROOT

table ResourcesF {
	sprites:[SpriteAssetF];
	tilesets:[TilesetAssetF];
	levels:[LevelAssetF];
}

root_type ResourcesF;
file_identifier "PACK";
file_extension  "pack";